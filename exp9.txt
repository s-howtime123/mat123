/*A palindrome is a string of character that‘s the same forward and backward. Typically, 
punctuation, capitalization, and spaces are ignored. For example, “Poor Dan is in a droop” 
is a palindrome, as can be seen by examining the characters “poor danisina droop” and 
observing that they are the same forward and backward. One way to check for a 
palindrome is to reverse the characters in the string and then compare with them the 
original-in a palindrome, the sequence will be identical. Write C++ program with 
functionsa) To print original string followed by reversed string using stack
b) To check whether given string is palindrome or not*/



#include <iostream>
#include <stack>
#include <cctype>

using namespace std;

// Function to print the original string followed by the reversed string using stack
void printOriginalAndReversed(const string& str) {
    stack<char> charStack;

    // Push each character onto the stack
    for (char ch : str) {
        charStack.push(ch);
    }

    // Print the original string
    cout << "Original String: " << str << endl;

    // Print the reversed string
    cout << "Reversed String: ";
    while (!charStack.empty()) {
        cout << charStack.top();
        charStack.pop();
    }
    cout << endl;
}

// Function to check whether a given string is a palindrome or not
bool isPalindrome(const string& str) {
    stack<char> charStack;

    // Push alphanumeric characters onto the stack (ignore spaces, punctuation, and case)
    for (char ch : str) {
        if (isalnum(ch)) {
            charStack.push(tolower(ch));
        }
    }

    // Check if the string is a palindrome
    for (char ch : str) {
        if (isalnum(ch) && tolower(ch) != charStack.top()) {
            return false;
        }
        charStack.pop();
    }

    return true;
}

int main() {
    string inputString;

    // Get user input
    cout << "Enter a string: ";
    getline(cin, inputString);

    // Call functions
    printOriginalAndReversed(inputString);

    if (isPalindrome(inputString)) {
        cout << "The string is a palindrome." << endl;
    } else {
        cout << "The string is not a palindrome." << endl;
    }

    return 0;
}
